// Inserting ,deleting 
class Solution {
    public boolean searchEle(List<Integer> arr, int x) {
        for(int i=0;i<arr.size();i++){
            if(arr.get(i)==x){
                return true;
            }
        }
        return false;
        
    }

    public boolean insertEle(List<Integer> arr, int y, int yi) {
        .
         if (yi < 0 || yi > arr.size()) {
            return false;
        }
        arr.add(yi, y);  
        return true;
        
    }

    public boolean deleteEle(List<Integer> arr, int z) {
    
             return arr.remove((Integer) z);
        
        
    }

// Alternates in an Array
class Solution {
   
    public ArrayList<Integer> getAlternates(int arr[]) {
       
        ArrayList<Integer> result = new ArrayList<>();
        for(int i=0;i<arr.length;i+=2){
            
                result.add(arr[i]);
        
        }
       return result;
        
    }
    public static void mian(String[] args){
        Solution sl = new Solution();
        int arr[] = {1,2,3,4};
        ArrayList<Integer> alter =sl.getAlternates(arr);
        System.out.print(alter);
    }
}
    
}


// Second Largest
class Solution {
    public int getSecondLargest(int[] arr) {
        if (arr == null || arr.length < 2) {
            return -1;
        }

        int first = Integer.MIN_VALUE;
        int second = Integer.MIN_VALUE;

        for (int num : arr) {
            if (num > first) {
                second = first;
                first = num;
            } else if (num > second && num < first) {
                second = num;
            }
        }

        return (second == Integer.MIN_VALUE) ? -1 : second;
    }
}

