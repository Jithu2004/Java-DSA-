##### contains Duplicates:

import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] n =  {1,2,3,52,3,2};
        HashSet<Integer> seen = new HashSet<>();
        HashSet<Integer> dup = new HashSet<>();
        for(int num : n){
            if(!seen.add(num)){
                dup.add(num);
            }
        }
        if(dup.isEmpty()){
            System.out.println("no duplicates");
        }
        else{
            System.out.println("contains duplicates");
        }
    }
}
    import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] n =  {1,2,3,52,3,2};
       HashMap<Integer,Integer> seen = new HashMap<>();
       for(int num : n){
           seen.put(num,seen.getOrDefault(num,0)+1);
       }
       for(int key:seen.keySet()){
           int count =1;
           if(seen.get(key) >count){
               System.out.println(key +":"+seen.get(key));
           }
       }
    }
}

##### Second largest Element $$$$$

import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] n =  {1,2,3,52,3,2};
        
     int first = Integer.MIN_VALUE;
     int sec= Integer.MIN_VALUE;
     for(int num :n){
         if(num > first){
             sec= first;
             first=num;
         }
         else if(num >sec && num < first){
             sec = num;
         }
     }
    if(sec == Integer.MIN_VALUE){
        System.out.println("no second value");
    }
    else {
        System.out.println(sec);
    }
     
    }
}
    ##### Bubble sorting

import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] arr =  {1,2,3,52,3,2};
        int n = arr.length;
    for(int i=0;i<n-1;i++){
        for(int j=0;j<n-1-i;j++){
            if(arr[j]>arr[j+1]){
                int temp =arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
    System.out.println(Arrays.toString(arr));
    }
}
    
